# this should be run during the build process when things are changed. It generates tables
# that are used by the program

import os
from colour import Color
from typing import TextIO

a_side_colour = Color("red")
b_side_colour = Color("blue")
table_length = 256
path_to_tables = "/src/tables/"
file_name = "brightnes_tables.h"
file_header = """// autogenerated by scripts/generate_brightness_tables.py
// do not modify!!
#include<Arduino.h>
#ifndef BRIGHTNESS_TABLES_H
#define BRIGHTNESS_TABLES_H
"""
a_array_header = f"const uint32_t a_brightness_table[{table_length}] {{\n"
b_array_header = f"const uint32_t b_brightness_table[{table_length}] {{\n"
array_footer = "};\n"
file_footer = "#endif"

def main():
    cwd = os.getcwd()
    with open(f"{cwd}{path_to_tables}{file_name}", 'w') as f:
        f.write(file_header)
        write_array(f, is_a=True)
        write_array(f, is_a=False)
        f.write(file_footer)
        
def write_array(f: TextIO, is_a: bool):
        header = a_array_header if is_a else b_array_header
        colour = a_side_colour if is_a else b_side_colour
        black = Color("black")
        
        f.write(header)
        for c in colour.range_to(black, table_length):
            color_val = int(c.get_hex_l()[1:], 16)
            f.write(f"\t{color_val}")
            if c != black:
                f.write(",\n")
            else:
                f.write("\n")
        f.write(array_footer)
    
if __name__ == "__main__":
    main()